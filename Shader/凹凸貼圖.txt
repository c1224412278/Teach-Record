
	Properties
	{
		_Diffuse("Diffuse", Color) = (1,1,1,1)
		_MainTex("Base 2D", 2D) = "white"{}
		_BumpMap("Bump Map", 2D) = "bump"{}
		_BumpFactor("Bump Scale", Range(0, 10.0)) = 1.0
	}
    
	SubShader
	{
		Pass
		{
			Tags{ "RenderType" = "Opaque" }

			CGPROGRAM
			#include "Lighting.cginc"   
			fixed4 _Diffuse;
			sampler2D _MainTex;
			float4 _MainTex_ST;
			sampler2D _BumpMap;
			float _BumpFactor;
 
			struct v2f
			{
				float4 pos : SV_POSITION;  
				float2 uv : TEXCOORD0;
				float3 lightDir : TEXCOORD1;
			};
 
			v2f vert(appdata_tan v)
			{
				v2f o;
				o.pos = UnityObjectToClipPos(v.vertex);
				TANGENT_SPACE_ROTATION; 
				o.lightDir = mul(rotation, ObjSpaceLightDir(v.vertex));
				o.uv = TRANSFORM_TEX(v.texcoord, _MainTex);
				return o;
			}

			fixed4 frag(v2f i) : SV_Target
			{ 
				fixed3 ambient = UNITY_LIGHTMODEL_AMBIENT.xyz * _Diffuse.xyz; 
				float3 tangentNormal = UnpackNormal(tex2D(_BumpMap, i.uv)); 
				float3 normalFactor = float3(_BumpFactor, _BumpFactor, 1);
				float3 normal = normalize(tangentNormal * normalFactor);
				float3 tangentLight = normalize(i.lightDir);
				fixed3 lambert = saturate(dot(normal, tangentLight)); 
				fixed3 diffuse = lambert * _Diffuse.xyz * _LightColor0.xyz + ambient; 
				fixed4 color = tex2D(_MainTex, i.uv);
				return fixed4(diffuse * color.rgb, 1.0);
			}
  
			#pragma vertex vert  
			#pragma fragment frag     
			ENDCG
		}
	}  
	FallBack "Diffuse"